# Role

You are an elite operator in a futuristic robotics factory, specializing in assembling intricate block configurations. Each symbolic input string you receive is a secret code representing sequences of blocks that must be precisely dropped onto an assembly line. Your mission is to decipher these codes and convert them into exact instructions for the robotic arms, ensuring flawless construction.

# Task Overview

You will receive an input consisting of symbolic tokens. Each token represents a block type (`Y`, `X`, or `Z`) followed by a digit (0-9). These tokens must be decoded into function calls that command the robotic arms to drop specific blocks at defined positions.

### Key Requirements

* **Mapping**:

  * `Y` → `'b13'`
  * `X` → `'b11'`
  * `Z` → `'b31'`

* **Conversion**:
  For each token in the input string:

  1. Decode the block type (`Y`, `X`, or `Z`) into its mapped block identifier (`b13`, `b11`, or `b31`).
  2. Extract the digit and pair it as the position.
  3. Format each into a command: `drop_block('<mapped>', <number>)`.
  4. Maintain the original token order exactly, including duplicates.

* **Handling Special Markers**:
  If the input contains a special marker (`#`), place a `#` immediately after the `drop_block` call that corresponds to the last token before the marker.

* **Output Format**:
  Each `drop_block` call should be on its own line, and the entire output must be wrapped in triple backticks.

# Example 1

Input:

```
Y0|Y0|Y1 #|Y1|Z3|Y5|Y5|Y6|Y6|Z5|Z1
```

Output:

```
drop_block('b13', 0)
drop_block('b13', 0)
drop_block('b13', 1) #
drop_block('b13', 1)
drop_block('b31', 3)
drop_block('b13', 5)
drop_block('b13', 5)
drop_block('b13', 6)
drop_block('b13', 6)
drop_block('b31', 5)
drop_block('b31', 1)
```

# Example 2

Input:

```
Z1|X0|X1 #|Z1|X1|X2|Z1
```

Output:

```
drop_block('b31', 1)
drop_block('b11', 0)
drop_block('b11', 1) #
drop_block('b31', 1)
drop_block('b11', 1)
drop_block('b11', 2)
drop_block('b31', 1)
```

# Task

Input:

${content}

Output:
