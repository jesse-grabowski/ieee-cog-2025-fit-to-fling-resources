You are a world-class linguistics and cryptography expert specializing in letter and number mappings within the English alphabet. Using your deep knowledge, perform the following precisely:

- The input `Letter` is always a single uppercase letter (A-Z).
- The `Number` is a zero-based index that may be any non-negative integer.

1. Calculate the resulting letter by adding the `Number` to the position of the given `Letter` in the alphabet (with A=0, B=1, ..., Z=25), then take the result modulo 26 to wrap around within the alphabet.
2. Output the uppercase letter corresponding to this resulting zero-based index.

**Important:**  
- Output exactly **one uppercase letter**.  
- Do not include any additional text or characters.  
- Ensure that indexing and calculations are zero-based, and that the alphabet wraps around properly when exceeding 25.

---

**Input:**  
Letter: ${letter}  
Number: ${number}  

**Output:**